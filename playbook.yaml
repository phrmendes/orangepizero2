---
- name: Configure orangepizero2
  hosts: all
  become: true
  vars:
    ansible_user: phrmendes
    ansible_become_user: root
  vars_files:
    - secrets.yaml

  roles:
    - role: geerlingguy.docker
      tags: docker
      vars:
        docker_install_compose_plugin: true
        docker_packages_state: present
        docker_users:
          - "{{ ansible_user }}"

    - role: artis3n.tailscale.machine
      tags: tailscale
      vars:
        tailscale_authkey: "{{ ts_orangepizero2_authkey }}"
        tailscale_args: "--reset"

  tasks:
    - name: Add user tool configurations
      tags: tools
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: "0666"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      loop:
        - src: ./init.vim
          dest: /home/{{ ansible_user }}/.vimrc
        - src: ./tmux.conf
          dest: /home/{{ ansible_user }}/.tmux.conf

    - name: Firewall settings
      tags: firewall
      block:
        - name: Install UFW firewall
          ansible.builtin.apt:
            name: ufw
            state: present

        - name: Set default UFW policies
          community.general.ufw:
            default: "{{ item.policy }}"
            direction: "{{ item.direction }}"
          loop:
            - { policy: deny, direction: incoming }
            - { policy: allow, direction: outgoing }

        - name: Allow OpenSSH for remote access
          community.general.ufw:
            rule: allow
            name: OpenSSH

        - name: Allow necessary TCP ports
          community.general.ufw:
            rule: allow
            port: "{{ item }}"
            proto: tcp
          loop: [53, 80, 8080, 22000]

        - name: Allow necessary UDP ports
          community.general.ufw:
            rule: allow
            port: "{{ item }}"
            proto: udp
          loop: [53, 21027]

    - name: Install Python dependencies for Docker management
      ansible.builtin.apt:
        name:
          - python3-requests
          - python3-yaml
        state: present

    - name: Docker setup
      tags: docker_compose
      block:
        - name: Create .env file
          ansible.builtin.template:
            src: ./templates/env.j2
            dest: /home/{{ ansible_user }}/.env
            mode: "0666"
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"

        - name: Deploy TSDProxy configuration
          ansible.builtin.template:
            src: ./templates/tsdproxy.yaml.j2
            dest: /home/{{ ansible_user }}/tsdproxy.yaml
            mode: "0666"
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"

        - name: Deploy Docker Compose configuration
          ansible.builtin.copy:
            src: ./docker-compose.yaml
            dest: /home/{{ ansible_user }}/docker-compose.yaml
            mode: "0666"
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"

        - name: Run Docker Compose to launch services
          community.docker.docker_compose_v2:
            project_src: /home/{{ ansible_user }}
            state: present
